# v3.800.15
# https://virtocommerce.atlassian.net/browse/VCST-3725
name: Module CI

on:
  workflow_dispatch:
  push:
    paths-ignore:
      - '.github/**'
      - 'docs/**'
      - 'build/**'
      - 'README.md'
      - 'LICENSE'
      - '**/argoDeploy.json'
      - '**/cloudDeploy.json'
      - samples/**
    branches:
      [master, main, dev]
  pull_request:
    branches:
      [master, main, dev]
    paths-ignore:
      - 'docs/**'
      - 'build/**'
      - 'README.md'
      - 'LICENSE'
      - '**/argoDeploy.json'
      - '**/cloudDeploy.json'
      - samples/**
    
jobs:
  ci:
    if: ${{ github.actor != 'dependabot[bot]' && 
        (github.event.pull_request.head.repo.full_name == github.repository || 
        github.event.pull_request.head.repo.full_name == '') }}  # Check that PR not from forked repo and not from Dependabot
    runs-on: ubuntu-24.04
    env:
      CLOUD_INSTANCE_BASE_URL: ${{secrets.CLOUD_INSTANCE_BASE_URL}}
      CLIENT_ID: ${{secrets.CLIENT_ID}}
      CLIENT_SECRET: ${{secrets.CLIENT_SECRET}}
      SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
      GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
      NUGET_KEY: ${{ secrets.NUGET_KEY }}
      BLOB_SAS: ${{ secrets.BLOB_TOKEN }}
      VERSION_SUFFIX: ''
      BUILD_STATE: 'failed'
      RELEASE_STATUS: 'false'

    outputs:
      artifactUrl: ${{ steps.artifactUrl.outputs.download_url }}
      blobId: ${{ steps.blobRelease.outputs.blobId }}
      jira-keys: ${{ steps.jira_keys.outputs.jira-keys }}
      version: ${{ steps.artifact_ver.outputs.shortVersion }}
      moduleId: ${{ steps.artifact_ver.outputs.moduleId }}
      matrix: ${{ steps.deployment-matrix.outputs.matrix }}
      run-e2e: ${{ steps.run-e2e.outputs.result }}
      run-ui-tests: ${{ steps.run-ui-tests.outputs.result }}
      deployment-folder-exists: ${{ steps.check_deployment_folder.outputs.exists }}

    steps:

      - name: Set up Node 20
        uses: actions/setup-node@v4
        with:
            node-version: '20'

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set RELEASE_STATUS
        # if: ${{ (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/test/VCST-1835') && github.event_name == 'push' }}
        run: |
          echo "RELEASE_STATUS=true" >> $GITHUB_ENV

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install VirtoCommerce.GlobalTool
        uses: VirtoCommerce/vc-github-actions/setup-vcbuild@master

      - name: Get Changelog
        id: changelog
        uses: VirtoCommerce/vc-github-actions/changelog-generator@master

      - name: Get Artifact Version
        uses: VirtoCommerce/vc-github-actions/get-image-version@master
        id: artifact_ver
        with:
          releaseBranch: vcst-1835

      - name: Build
        run: vc-build Compile

      - name: Packaging
        run: vc-build Compress -skip Clean+Restore+Compile+Test

      - name: Publish Github Release
        # if: ${{ github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/test/VCST-1835'}}
        id: githubRelease
        with:
          makeLatest: false
          changelog: ${{ steps.changelog.outputs.changelog }}
          organization: ${{ github.repository_owner }}
        uses: VirtoCommerce/vc-github-actions/publish-github-release@VCST-1835-1 #master

  # ui-auto-tests:
  #   if: ${{ ((github.ref == 'refs/heads/dev') && (github.event_name == 'push')) ||
  #       (github.event_name == 'workflow_dispatch') || ((github.base_ref == 'dev') && (github.event_name == 'pull_request')) }}
  #   needs: 'ci'
  #   uses: VirtoCommerce/.github/.github/workflows/ui-autotests.yml@v3.800.15
  #   with:
  #     installModules: 'false'
  #     installCustomModule: 'true'
  #     customModuleId:  ${{ needs.ci.outputs.moduleId }}
  #     customModuleUrl:  ${{ needs.ci.outputs.artifactUrl }}
  #     runTests: ${{ needs.ci.outputs.run-ui-tests }}
  #   secrets:
  #     envPAT: ${{ secrets.REPO_TOKEN }}
  
  # module-katalon-tests:
  #   if: ${{ ((github.ref == 'refs/heads/dev') && (github.event_name == 'push') && (needs.ci.outputs.run-e2e == 'true')) ||
  #       (github.event_name == 'workflow_dispatch') || (github.base_ref == 'dev') && (github.event_name == 'pull_request') }}
  #   needs: 'ci'
  #   uses: VirtoCommerce/.github/.github/workflows/e2e.yml@v3.800.15
  #   with:
  #     katalonRepo: 'VirtoCommerce/vc-quality-gate-katalon'
  #     katalonRepoBranch: 'dev'
  #     testSuite: 'Test Suites/Modules/Platform_collection'
  #     installModules: 'false'
  #     installCustomModule: 'true'
  #     customModuleId:  ${{ needs.ci.outputs.moduleId }}
  #     customModuleUrl:  ${{ needs.ci.outputs.artifactUrl }}
  #     platformDockerTag: 'dev-linux-latest'
  #     storefrontDockerTag: 'dev-linux-latest'
  #   secrets:
  #     envPAT: ${{ secrets.REPO_TOKEN }}
  #     katalonApiKey: ${{ secrets.KATALON_API_KEY }}

  # deploy-cloud:
  #   if: ${{ (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev')
  #     && github.event_name == 'push'
  #     && needs.ci.outputs.deployment-folder-exists == 'true'}}
  #   needs: ci
  #   uses: VirtoCommerce/.github/.github/workflows/deploy-cloud.yml@v3.800.15
  #   with:
  #     releaseSource: module
  #     moduleId: ${{ needs.ci.outputs.moduleId }}
  #     moduleVer: ${{ needs.ci.outputs.version }}
  #     moduleBlob: ${{ needs.ci.outputs.blobId }}
  #     jiraKeys: ${{ needs.ci.outputs.jira-keys }}
  #     argoServer: 'argo.virtocommerce.cloud'
  #     matrix: '{"include":${{ needs.ci.outputs.matrix }}}'
  #   secrets: inherit
